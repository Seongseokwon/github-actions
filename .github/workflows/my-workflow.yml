name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      branch:
        description: |
          [필수] 배포할 환경 선택 (main, dev)
        required: true
        default: dev
        type: choice
        options:
          - main
          - dev
      version:
        description: |
          버전 선택 (major, minor, patch)
        required: true
        default: patch
        type: choice
        options:
          - major
          - minor
          - patch
      user_email:
        description: |
          Git 커밋에 사용할 이메일 주소 (선택사항)
        required: false
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.branch }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: write

env:
  GIT_AUTHOR_NAME: GitHub Actions
  GIT_AUTHOR_EMAIL: action@github.com
  GIT_COMMITTER_NAME: GitHub Actions
  GIT_COMMITTER_EMAIL: action@github.com

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump Version
        run: |
          echo "Bump Version"
          echo "github.actor_id: ${{ github.actor_id }}"
          echo "github.actor: ${{ github.actor }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event_path: ${{ github.event_path }}"
          echo "github.event.inputs.branch: ${{ github.event.inputs.branch }}"
          echo "github.event.inputs.version: ${{ github.event.inputs.version }}"

          # 사용자 정보로 Git config 설정
          if [ -n "${{ github.event.inputs.user_email }}" ]; then
            USER_EMAIL="${{ github.event.inputs.user_email }}"
          else
            USER_EMAIL="${{ github.actor }}@users.noreply.github.com"
          fi

          git config --global user.name "${{ github.actor }}"
          git config --global user.email "$USER_EMAIL"

          echo "Git user.name: ${{ github.actor }}"
          echo "Git user.email: $USER_EMAIL"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Deploy env
        run: |
          echo "Set up Deploy env"
          echo "Deploy env: ${{ inputs.branch }}"
          echo "Deploy env: ${{ inputs.version }}"

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [bump-version, deploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
